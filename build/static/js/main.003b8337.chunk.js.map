{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObj","post","id","put","delete","PersonForm","persons","setPersons","handleMessage","setMessage","useState","newName","setNewName","newNumber","setNewNumber","emptyInputFields","handleNamesake","namesake","window","confirm","name","changedPerson","number","personService","person","returnedPerson","map","p","catch","error","onSubmit","event","preventDefault","find","undefined","personObj","concat","concatReturned","value","onChange","target","type","Filter","setShowAll","setNewFilter","Notification","message","styleColor","includes","className","DeleteButton","onClick","removed","filter","Persons","showAll","newFilter","personsToShow","x","toLowerCase","key","App","useEffect","initialPersons","text","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.003b8337.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst create = newObj => {\r\n    const req = axios.post(baseUrl, newObj)\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({ persons, setPersons, handleMessage, setMessage }) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const updatePerson = (person) => {\r\n    personService\r\n      .update(person.id, person)\r\n      .then(returnedPerson => {\r\n        setPersons(\r\n          persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson)\r\n        )\r\n        handleMessage(`Updated ${person.name}'s phone number`)\r\n      }).catch(error => {\r\n        //how do you check what caused the error?\r\n        handleMessage(`Error: ${person.name} was already deleted from server`)\r\n      })\r\n  }\r\n\r\n  const emptyInputFields = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  //do I want to empty inputs if we don't replace the number?\r\n  const handleNamesake = (namesake) => {\r\n    if (window.confirm(`${namesake.name} is already added to phonebook, replace the old number?`)) {\r\n      const changedPerson = { ...namesake, number: newNumber }\r\n      updatePerson(changedPerson)\r\n      emptyInputFields()\r\n    }\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    //jos laitan tän niin se on aina true...? HMMM\r\n    //ahaa..?? se palauttaa vaan ton nuolen jälkeen olevan tekstin? eikä booleania\r\n    //const nameExists = () => persons.some(x => x.name === newName)\r\n    //console.log('nameExists', nameExists)\r\n\r\n    const namesake = persons.find(p => p.name === newName)\r\n    if (namesake !== undefined) {\r\n      handleNamesake(namesake)\r\n      return\r\n    }\r\n\r\n    const personObj = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    const concatReturned = (returnedPerson) => {\r\n      setPersons(persons.concat(returnedPerson))\r\n      emptyInputFields()\r\n    }\r\n\r\n    //a person has an id created by the server\r\n    personService\r\n      .create(personObj)\r\n      .then(returnedPerson => {\r\n        concatReturned(returnedPerson)\r\n        handleMessage(`Added ${returnedPerson.name} to Phonebook`)\r\n      })\r\n      .catch(error => handleMessage(`Error: Couldn't add ${personObj.name}`))\r\n  }\r\n\r\n  //jos yritän tehdä näistä onelinerit, niin se kadottaa sen viitteen? eiks se osaa..? hmm?\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name:\r\n            <input\r\n          value={newName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        phone:\r\n            <input\r\n          value={newNumber}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ setShowAll, setNewFilter }) => {\r\n    const handleFilterChange = (event) => {\r\n      //en oo täysin varma tän logiikasta\r\n      if (event.target.value === null) {\r\n        setShowAll(true)\r\n      } else {\r\n        setNewFilter(event.target.value)\r\n        setShowAll(false)\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        filter names:\r\n        <input onChange={handleFilterChange} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  //if someone's name is Error then it's.. red. But that's ok for now\n  const styleColor = message.includes(\"Error\") ? \"errorMessage\" : \"successMessage\"\n\n  return (\n    <div className={styleColor}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst DeleteButton = ({ id, persons, setPersons, handleMessage }) => {\n  const handleClick = () => {\n    const name = persons.find(person => person.id === id).name\n\n    if (window.confirm(`Delete ${name} from Phonebook?`)) {\n      personService\n        .remove(id)\n        .then(removed => {\n          setPersons(persons.filter(p => p.id !== id))\n          handleMessage(`Deleted ${name} from Phonebook`)\n        })\n        .catch(error => handleMessage(`Error: Couldn't delete ${name} or has already been deleted from the server`))\n    }\n  }\n\n  return (\n    <button onClick={handleClick}>delete</button>\n  )\n}\n\n//handleMessage is here just to pass it to DeleteButton\nconst Persons = ({ showAll, persons, newFilter, setPersons, handleMessage }) => {\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(x =>\n      x.name\n        .toLowerCase()\n        .includes(newFilter.toLowerCase()))\n\n  return (\n    <>\n      {personsToShow.map((person) =>\n        <div key={person.name}>\n          {person.name} {person.number}\n          <DeleteButton\n            id={person.id}\n            persons={persons}\n            setPersons={setPersons}\n            handleMessage={handleMessage}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [message, setMessage] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }\n  useEffect(hook, [])\n\n  const handleMessage = (text) => {\n    setMessage(text)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter\n        setShowAll={setShowAll}\n        setNewFilter={setNewFilter}\n      />\n      <h2>Add a new person</h2>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        handleMessage={handleMessage}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        showAll={showAll}\n        persons={persons}\n        newFilter={newFilter}\n        setPersons={setPersons}\n        handleMessage={handleMessage}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}